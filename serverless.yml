# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: ${env:SERVICE_NAME}
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: python3.11
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
      Resource: "arn:aws:s3:::${env:S3_BUCKET_NAME}/*"

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    fileName: ./src/requirements.txt
    dockerizePip: non-linux

resources:
  Resources:
    SnsTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${env:SNS_TOPIC_NAME}  

    TestBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${env:S3_BUCKET_NAME}
        NotificationConfiguration:
          TopicConfigurations:
            - Event: s3:ObjectCreated:*
              Topic: !Ref SnsTopic
            - Event: s3:ObjectRemoved:*
              Topic: !Ref SnsTopic
      DependsOn:
        - BucketToSNSPermission

    BucketToSNSPermission:
      Type: AWS::SNS::TopicPolicy
      Properties:
        PolicyDocument:
          Id: MyTopicPolicy
          Version: '2012-10-17'
          Statement:
          - Sid: My-statement-id
            Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Action: sns:Publish
            Resource: !Ref SnsTopic
            Condition:
              ArnLike:
                aws:SourceArn: arn:aws:s3:*:*:${env:S3_BUCKET_NAME}
        Topics:
          - !Ref SnsTopic

# functions:
  NewRelic-s3-sns-log-ingestion:
    handler: src/handler.lambda_handler
    environment:
      LICENSE_KEY: ${env:LICENSE_KEY}
      LOG_TYPE: ${env:LOG_TYPE}
      DEBUG_ENABLED: ${env:DEBUG_ENABLED}
      S3_CLOUD_TRAIL_LOG_PATTERN: ${env:S3_CLOUD_TRAIL_LOG_PATTERN}
      S3_IGNORE_PATTERN: ${env:S3_IGNORE_PATTERN}
      BATCH_SIZE_FACTOR: ${env:BATCH_SIZE_FACTOR}
      ADDITIONAL_ATTRIBUTES: ${env:ADDITIONAL_ATTRIBUTES}
    events:
      - sns:
          arn: !Ref SnsTopic
          topicName: ${env:SNS_TOPIC_NAME}  